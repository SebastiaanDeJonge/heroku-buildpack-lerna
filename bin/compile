#!/usr/bin/env bash
set -e

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BUILDPACK_DIR=$(cd "$(dirname "${0:-}")"; cd ..; pwd)
STAGE="$(mktemp -d)"

# Include output helpers
source "$BUILDPACK_DIR/lib/output.sh"

# Ensure the APP_BASE path exists
if [ ! -f "${ENV_DIR}/APP_BASE" ]; then
    error "ERROR: APP_BASE has not been defined"
    exit 1
fi

# Define absolute path to base directory
APP_BASE="$(cat "${ENV_DIR}/APP_BASE")"

# Move to build directory
cd "${BUILD_DIR}"

# Read the package name from its package.json
header "Fetching package name from package.json inside ${APP_BASE}"
APP_PACKAGE_NAME="$(node -pe "require('./${APP_BASE}/package.json')[\"name\"]")"

# Run Lerna bootstrap
header "Bootstrapping ${APP_PACKAGE_NAME}"
lerna bootstrap --scope="${APP_PACKAGE_NAME}" --include-dependencies 2>&1 | output

# Run build script on package
header "Building ${APP_PACKAGE_NAME}"
lerna run build --scope="${APP_PACKAGE_NAME}" --include-dependencies --stream 2>&1 | output

# List build path contents
ls -lAh

# Replace the entire monorepo contents with just those of the built app
cd ../
SOURCE_PATH="${BUILD_DIR}/${APP_BASE}"
HEROKU_PATH="${BUILD_DIR}/.heroku"
PROFILE_PATH="${BUILD_DIR}/.profile.d"
header "Staging built changes (${SOURCE_PATH} => ${STAGE})"
mv "${SOURCE_PATH}" "${STAGE}"
mv "${HEROKU_PATH}" "${STAGE}"
mv "${PROFILE_PATH}" "${STAGE}"

header "Clearing build directory (${BUILD_DIR})"
rm -rf "${BUILD_DIR}"

APP_DIR=$(basename "${SOURCE_PATH}")
header "Finalizing staged build (${STAGE}/${APP_DIR} => ${BUILD_DIR})"
mv "${STAGE}/${APP_DIR}" "${BUILD_DIR}"

header "Build completed"